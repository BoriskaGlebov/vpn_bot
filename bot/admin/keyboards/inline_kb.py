from __future__ import annotations

from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder


class UserPageCB(CallbackData, prefix="pagination_user"):  # type: ignore[misc,call-arg]
    """Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.

    Attributes
        filter_type (str): –¢–∏–ø —Ñ–∏–ª—å—Ç—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'admin', 'user', 'founder').
        index (int): –ò–Ω–¥–µ–∫—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–∫—É—â–µ–º —Å–ø–∏—Å–∫–µ.
        action (str): –î–µ–π—Å—Ç–≤–∏–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            ('next', 'prev', 'role_change', 'sub_manage' –∏ —Ç.–¥.).
        telegram_id (int | None): Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).
        month (int | None): –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).

    """

    filter_type: str
    index: int
    action: str
    telegram_id: int | None = None
    month: int | None = None


def admin_user_control_kb(
    filter_type: str,
    index: int = 0,
    telegram_id: int | None = None,
) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.

    Args:
        filter_type (str): –¢–∏–ø —Ñ–∏–ª—å—Ç—Ä–∞, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        index (int, optional): –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 0.
        telegram_id (int | None, optional): Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Returns
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.

    """
    builder = InlineKeyboardBuilder()

    builder.button(
        text="üé≠ –†–æ–ª—å",
        callback_data=UserPageCB(
            filter_type=filter_type,
            index=index,
            action="role_change",
            telegram_id=telegram_id,
        ),
    )
    builder.button(
        text="üíé –ü–æ–¥–ø–∏—Å–∫–∞",
        callback_data=UserPageCB(
            filter_type=filter_type,
            index=index,
            action="sub_manage",
            telegram_id=telegram_id,
        ),
    )

    builder.adjust(2, 1, 1)
    return builder.as_markup()


def role_selection_kb(
    filter_type: str,
    index: int = 0,
    telegram_id: int | None = None,
) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Args:
        filter_type (str): –¢–µ–∫—É—â–∏–π —Ñ–∏–ª—å—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        index (int, optional): –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 0.
        telegram_id (int | None, optional): Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Returns
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏.

    """
    builder = InlineKeyboardBuilder()

    builder.button(
        text="User",
        callback_data=UserPageCB(
            filter_type="user",
            index=index,
            action="role_select",
            telegram_id=telegram_id,
        ),
    )
    builder.button(
        text="Founder",
        callback_data=UserPageCB(
            filter_type="founder",
            index=index,
            action="role_select",
            telegram_id=telegram_id,
        ),
    )
    builder.button(
        text="–û—Ç–º–µ–Ω–∞",
        callback_data=UserPageCB(
            filter_type=filter_type,
            index=index,
            action="role_cancel",
            telegram_id=telegram_id,
        ),
    )

    builder.adjust(2, 1)
    return builder.as_markup()


def subscription_selection_kb(
    filter_type: str,
    index: int = 0,
    telegram_id: int | None = None,
) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ä–æ–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏.

    Args:
        filter_type (str): –¢–µ–∫—É—â–∏–π —Ñ–∏–ª—å—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        index (int, optional): –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 0.
        telegram_id (int | None, optional): Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Returns
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏.

    """
    builder = InlineKeyboardBuilder()

    for months in (1, 3, 6, 12):
        builder.button(
            text=f"{months} –º–µ—Å.",
            callback_data=UserPageCB(
                filter_type=filter_type,
                index=index,
                action="sub_select",
                telegram_id=telegram_id,
                month=months,
            ),
        )

    builder.button(
        text="–û—Ç–º–µ–Ω–∞",
        callback_data=UserPageCB(
            filter_type=filter_type,
            index=index,
            action="subscr_cancel",
            telegram_id=telegram_id,
        ),
    )

    builder.adjust(2, 2, 1)
    return builder.as_markup()


class AdminCB(CallbackData, prefix="admin"):  # type: ignore[misc,call-arg]
    """Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.

    Attributes
        filter_type (str): –¢–∏–ø —Ñ–∏–ª—å—Ç—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'admin', 'founder', 'user').

    """

    filter_type: str


def admin_main_kb() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—ë—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.

    Returns
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

    """
    builder = InlineKeyboardBuilder()

    builder.button(text="–í—Å–µ –∞–¥–º–∏–Ω—ã", callback_data=AdminCB(filter_type="admin"))
    builder.button(
        text="–û—Å–Ω–æ–≤–∞—Ç–µ–ª–∏ (founder)", callback_data=AdminCB(filter_type="founder")
    )
    builder.button(
        text="–û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data=AdminCB(filter_type="user")
    )

    builder.adjust(1)
    return builder.as_markup()


def user_navigation_kb(
    filter_type: str,
    index: int,
    total: int,
    telegram_id: int | None = None,
) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.

    Args:
        filter_type (str): –¢–µ–∫—É—â–∏–π —Ñ–∏–ª—å—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        index (int): –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        total (int): –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        telegram_id (int | None, optional): Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Returns
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.

    """
    builder = InlineKeyboardBuilder()

    builder.button(
        text="üé≠ –†–æ–ª—å",
        callback_data=UserPageCB(
            filter_type=filter_type,
            index=index,
            action="role_change",
            telegram_id=telegram_id,
        ),
    )
    builder.button(
        text="üíé –ü–æ–¥–ø–∏—Å–∫–∞",
        callback_data=UserPageCB(
            filter_type=filter_type,
            index=index,
            action="sub_manage",
            telegram_id=telegram_id,
        ),
    )

    if index > 0:
        builder.button(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            callback_data=UserPageCB(
                filter_type=filter_type,
                index=index - 1,
                action="navigate",
                telegram_id=telegram_id,
            ),
        )

    if index < total - 1:
        builder.button(
            text="‚û°Ô∏è –í–ø–µ—Ä—ë–¥",
            callback_data=UserPageCB(
                filter_type=filter_type,
                index=index + 1,
                action="navigate",
                telegram_id=telegram_id,
            ),
        )

    builder.adjust(2, 1)
    return builder.as_markup()
