from typing import TYPE_CHECKING

from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.utils.chat_action import ChatActionSender
from config import bot
from database import connection
from sqlalchemy.ext.asyncio import AsyncSession
from users.dao import UserDAO
from users.schemas import SUserTelegramID

if TYPE_CHECKING:
    from bot.users.models import User
vpn_router = Router()


# class VPNStates(StatesGroup):
#     """–°–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è vpn-router."""
#
#     pass


@vpn_router.message(F.text.contains("üîë –ü–æ–ª—É—á–∏—Ç—å VPN-–∫–æ–Ω—Ñ–∏–≥ AmneziaVPN"))  # type: ignore[misc]
async def get_config_amnezia_vpn(message: Message, state: FSMContext) -> None:
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç –∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª amnezia_vpn."""
    async with ChatActionSender.typing(bot=bot, chat_id=message.chat.id):
        await message.answer(
            "–ù–∞ —Å–≤–æ–π –∫–æ–Ω—Ñ–∏–≥ amneziaVPN", reply_markup=ReplyKeyboardRemove()
        )
        await state.clear()


@vpn_router.message(F.text.contains("üåê –ü–æ–ª—É—á–∏—Ç—å VPN-–∫–æ–Ω—Ñ–∏–≥ AmneziaWG"))  # type: ignore[misc]
async def get_config_amnezia_wg(message: Message, state: FSMContext) -> None:
    """–ü–æ–ª—å–∑–≤–æ–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç –∫–æ–Ω—Ñ–∏–≥ Amnezia WG."""
    async with ChatActionSender.typing(bot=bot, chat_id=message.chat.id):
        await message.answer(
            "–ù–∞ —Å–≤–æ–π –∫–æ–Ω—Ñ–∏–≥ amneziaWG", reply_markup=ReplyKeyboardRemove()
        )
        await state.clear()


@vpn_router.message(F.text.contains("üìà –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏"))  # type: ignore[misc]
@connection()  # type: ignore[misc]
async def check_subscription(
    message: Message, session: AsyncSession, state: FSMContext
) -> None:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."""
    async with ChatActionSender.typing(bot=bot, chat_id=message.chat.id):
        s_user = SUserTelegramID(telegram_id=message.from_user.id)
        user: "User" = await UserDAO.find_one_or_none(session=session, filters=s_user)
        await message.answer(
            "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏", reply_markup=ReplyKeyboardRemove()
        )
        if user.subscription.is_active:
            text = f"‚úÖ {user.subscription}"
        else:
            text = f"üîí {user.subscription}"

        await bot.send_message(chat_id=message.from_user.id, text=text)
        await state.clear()
