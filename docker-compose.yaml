services:
  db:
    image: postgres:16
    container_name: postgres_vpn_bot
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      TZ: Europe/Moscow
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - vpn_data:/var/lib/postgresql/data
      #      - ./init.sh:/docker-entrypoint-initdb.d/init.sh это надо при создании тестовой БД
    #        - ./dump:/dump  # Монтируем папку с дампами
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_DATABASE} || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - vpn_boriska_net


  redis:
    image: redis:latest
    container_name: redis_vpn_bot_cache
    restart: always
    command: redis-server /usr/local/etc/redis/redis.conf --replicaof no one
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - .env  # Используем переменную окружения для выбора файла .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD} # Еще нужно явно указать пароль в config
      - TZ=Europe/Moscow
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli -a $REDIS_PASSWORD ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          memory: 128M
    networks:
      - vpn_boriska_net

#  api:
#    image: boristhebladeglebov/girumed-app:latest
##    build:
##      context: .
##      dockerfile: Dockerfile
#    container_name: fastapi_girumed
#    env_file:
#      - .env
#    ports:
#      - "8000:8000"
#    depends_on:
#      db:
#        condition: service_healthy
#    networks:
#      - girumed_net
#    restart: always
#    healthcheck:
#      test: [ "CMD-SHELL", "curl -f http://localhost:8000/health || exit 1" ]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#    deploy:
#      resources:
#        limits:
#          cpus: '0.5'
#          memory: 256M
#        reservations:
#          memory: 128M

volumes:
  vpn_data:
    name: vpn_boriska_db
  redis_data:
    name: redis_data_cash

networks:
  vpn_boriska_net:
    name: vpn_boriska_net
    driver: bridge
#    external: true
